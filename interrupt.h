#include "hardware.h"
/**
 * @brief 
 * 
 */
typedef void (*handler_func_t)(void *ctx); // I don't know yet the best way to phrase the generic function type of a handler
handler_func_t InterruptVectorTable[TRAP_VECTOR_SIZE];

/**
 * @brief This trap results from a “kernel call” (also called a “system call” or “syscall”) trap
 *        instruction executed by the current user processes
 * 
 * @param ctx
 */
void TrapKernelHandler(void *ctx); // handler for trap kernel

/**
 * @brief This interrupt results from the machine’s hardware clock, which generates periodic
`*        clock interrupts
 * 
 * @param ctx
 */
void TrapClockHandler(void *ctx); // handler for trap clock

/**
 * @brief This exception results from the execution of an illegal instruction by the currently
 *        executing user process
 * 
 * @param ctx
 */
void TrapIllegalHandler(void *ctx); // handler for trap illegal

/**
 * @brief This exception results from a disallowed memory access by the current user process.
 * 
 * @param ctx
 */
void TrapMemoryHandler(void *ctx); // handler for trap memory

/**
 * @brief This exception results from any arithmetic error from an instruction executed by the
 *        current user process, such as division by zero or an arithmetic overflow.
 * 
 * @param ctx
 */
void TrapMathHandler(void *ctx); // handler for trap math

/**
 * @brief This interrupt is generated by the terminal device controller hardware, when
 *        a complete line of input is available from one of the terminals attached to the system
 * 
 * @param ctx
 */
void TrapTTYReceiveHandler(void *ctx); // handler for trap tty receive

/**
 * @brief This interrupt is generated by the terminal device controller hardware, when
 *        the current buffer of data previously given to the controller on a TtyTransmit instruction has been
 *        completely sent to the terminal
 * 
 * @param ctx
 */
void TrapTTYTransmitHandler(void *ctx); // handler for trap tty transmit

/**
 * @brief This interrupt is generated by the disk when it completes an operation
 * 
 * @param ctx
 */
void TrapDiskHandler(void *ctx); // handler for trap disk
